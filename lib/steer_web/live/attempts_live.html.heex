<script>
  let requestMoreAttempts = (element, attemptHtlcId) => {
    window.attempts = { needsMore: true, lastAttemptHtlcId: attemptHtlcId }

    element.dispatchEvent(new Event('load-more'))
  }
</script>

<%= for attempt <- @attempts do %>
  <%= if attempt.is_last do %>
    <div
      id={"load-more-#{attempt.htlc_id}"}
      phx-hook="LoadMoreAttemptsHook"
      x-intersect.once={"requestMoreAttempts($el, #{attempt.htlc_id})"}>
    </div>
  <% end %>
  <div class="attempt">
    <div class="attempt-header">
      <div class="attempt-time"
        title={ attempt.timestamp_ns |> DateTime.from_unix!(:nanosecond) |> DateTime.to_string() }>
        <%= HtlcEvent.time_from_now(attempt) %>
        </div>
      <div class={"attempt-status #{attempt.status_class}"}>
        <%= attempt.status %>
      </div>
    </div>
    <div>
      <%= attempt.channel_in %>
      ->
      <%= attempt.channel_out %>
    </div>
    <div>
      amount: <%= attempt.formatted_amount_out %> sats
    </div>
    <%= if attempt.amount_in > 0 and attempt.amount_out > 0 do %>
      <div>
        fee: <%= (attempt.amount_in - attempt.amount_out) / 1000 %> sats
      </div>
    <% end %>
  </div>
<% end %>
